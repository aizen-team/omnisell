version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: myapp
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    container_name: redis_cache
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - app-network

  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - app-network

  nestjs-api:
    image: node:18-alpine
    container_name: nestjs_api
    working_dir: /app
    ports:
      - "3001:3000"
    environment:
      DATABASE_URL: postgresql://postgres:password123@postgres:5432/myapp
      REDIS_URL: redis://redis:6379
      SMTP_HOST: mailhog
      SMTP_PORT: 1025
      JWT_SECRET: your-jwt-secret-key
    depends_on:
      - postgres
      - redis
      - mailhog
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - app-network
    command: sh -c "npm install && npm run start:dev"

  nextjs-frontend:
    image: node:18-alpine
    container_name: nextjs_frontend
    working_dir: /app
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3001
      API_URL: http://nestjs-api:3000
    depends_on:
      - nestjs-api
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - app-network
    command: sh -c "npm install && npm run dev"

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - app-network

volumes:
  postgres_data:
  redis_data:

networks:
  app-network:
    driver: bridge
